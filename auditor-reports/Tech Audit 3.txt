Gemini PRONotion Deployment Audit Findingshttps://g.co/gemini/share/45b40b34f02b Created with 2.5 Flash August 30, 2025 at 04:10 AM Published August 30, 2025 at 03:04 PMYou are tasked with auditing a Notion APIÐbased deployment system named "Legacy Concierge v3.7.9 (Gold)". Your evaluation must be entirely objective. Do not assume correctness or failure. Base all findings solely on the sources included below. Document what is present, how it is implemented, what appears absent, and any fragility you detect when compared against the public Notion API behavior. Scope of materials provided here: ¥ Deployment script: deploy/deploy.py (full source below) ¥ YAML configuration: split_yaml/*.yaml (full contents below) ¥ Assets are expected to be externally hosted via ASSET_BASE_URL (string), referenced by filename in YAML. Your tasks: 1) For each major feature described/implemented by the code and YAML, assess: - Presence (code and/or YAML) - Likely correctness relative to Notion API expectations - Idempotency and error handling considerations - UX/consistency considerations, if observable from code/YAML 2) Produce: - Executive Summary (risk level, major strengths/weaknesses) - Validation Table (Feature | Verdict | Evidence | Severity | Recommendation) - Missing/Incomplete Features - Fragility & Edge Cases - Final Verdict (Deployment Risk = Low/Medium/High with justification) Do not infer or guess beyond the provided sources. If the code omits a behavior, state that it is not observable in the materials. === BEGIN SOURCE: deploy/deploy.py === # deploy_v3_5.py Ñ v (Audit Fix Patch) # Entry points preserved: # Implements: # - True relations (from "Related Page Title") # - Acceptance DB "Check" as Notion formula # - Rich-text seeds (italic/gray) for Notes # - Multi-select defaults # - Synced blocks library + copies # - Grid dashboards, hero blocks, nav links # - Robust req() with retries incl. 504; JSON helpers # - All helper functions defined; idempotent markers import os, sys, json, time, argparse import requests import urllib.parse import urllib.parse import math ENABLE_SEARCH_FALLBACK = os.getenv("ENABLE_SEARCH_FALLBACK","1") in ("1","true","True","yes","YES") def expect_ok(resp, context=""): if resp is None: print("ERROR:", context, "no response"); return False if resp.status_code not in (200,201): try: body = resp.json() except Exception: body = resp.text print("ERROR:", context, resp.status_code, body) return False return True def find_page_id_by_title(title, state): pid = state["pages"].get(title) if pid: return pid if not ENABLE_SEARCH_FALLBACK: return None payload = { "query": title, "filter": {"value":"page","property":"object"} } r = req("POST","https://api.notion.com/v1/search", data=json.dumps(payload)) if r.status_code in (200,201): data = j(r) for res in data.get("results",[]): # Try to read the page title property (varies by DB/page) props = res.get("properties",{}) name = None for p in props.values(): if p.get("type")=="title": name = "".join([t.get("plain_text","") for t in p.get("title",[])]) break if not name and res.get("object")=="page": # fallback to plain title in properties.title pass if name and name.strip()==title.strip(): return res.get("id") return None def url_join(base, filename): filename = filename.lstrip("/") return base.rstrip("/") + "/" + urllib.parse.quote(filename) NOTION_TOKEN = os.getenv("NOTION_TOKEN") NOTION_VERSION = os.getenv("NOTION_VERSION", "2022-06-28") def req(method, url, headers=None, data=None, files=None, timeout=None): headers = headers or {} if "Notion-Version" not in headers: headers["Notion-Version"] = os.getenv("NOTION_VERSION","2022-06-28") if "Authorization" not in headers: headers["Authorization"] = f'Bearer {os.getenv("NOTION_TOKEN","")}' if "Content-Type" not in headers and data is not None and files is None: headers["Content-Type"] = "application/json" timeout = timeout or int(os.getenv("NOTION_TIMEOUT","25")) max_try = int(os.getenv("RETRY_MAX","5")) backoff = float(os.getenv("RETRY_BACKOFF_BASE","1.5")) for attempt in range(max_try): try: r = requests.request(method, url, headers=headers, data=data, files=files, timeout=timeout) except requests.exceptions.Timeout: if attempt == max_try-1: raise time.sleep(backoff * (attempt+1)); continue except requests.exceptions.RequestException as e: # network failure if attempt == max_try-1: raise time.sleep(backoff * (attempt+1)); continue if r.status_code in (429, 500, 502, 503, 504): # retryable time.sleep(backoff * (attempt+1)); continue # return on any non-retryable return r return r return r def j(resp): try: return resp.json() except Exception: return {} def resolve_icon(spec): if not spec: return None if spec.startswith("emoji:"): return {"type":"emoji","emoji": spec.split(":",1)[1]} base = os.getenv("ASSET_BASE_URL") or os.getenv("ICON_BASE_URL") if base and (spec.endswith(".png") or spec.endswith(".jpg") or spec.endswith(".jpeg") or spec.endswith(".svg")): return {"type":"external","external":{"url": url_join(base, spec)}} return {"type":"emoji","emoji":"??"} def helper_toggle(summary, bullets): return {"object":"block","type":"toggle","toggle":{"rich_text":[{"type":"text","text":{"content":summary}}], "children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":b}}]}} for b in bullets]}} def rt(text, italic=False, bold=False, color="gray"): return [{"type":"text","text":{"content":str(text)},"annotations":{"italic":italic,"bold":bold,"color":color}}] def has_marker(pid, text_snippet): r = req("GET", f"https://api.notion.com/v1/blocks/{pid}/children") data = j(r) for b in data.get("results", []): t = b.get("type") if t in ["paragraph","heading_1","heading_2","heading_3","callout","bulleted_list_item","numbered_list_item","to_do","toggle"]: rtxt = b[t].get("rich_text",[]) txt = "".join([x.get("plain_text","") for x in rtxt]) if text_snippet.lower() in txt.lower(): return True return False def create_page(parent_id, title, icon=None, cover=None, description=None, helpers=None, role=None): payload = {"parent":{"type":"page_id","page_id":parent_id}, "icon": icon, "cover": cover, "properties":{"title":{"title":[{"type":"text","text":{"content":title}}]}}} r = req("POST","https://api.notion.com/v1/pages", data=json.dumps(payload)) if r.status_code not in (200,201): print("ERROR creating page", title, r.text); return None pid = j(r)["id"] # Build hero + description + helpers in one pass to avoid duplicates later blocks = [] blocks += make_hero_blocks(title, role) if description: blocks.append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(description)}}) if helpers: for helper in helpers: blocks.append(helper_toggle(str(helper), ["Please complete this step."])) if blocks: req("PATCH", f"https://api.notion.com/v1/blocks/{pid}/children", data=json.dumps({"children":blocks})) return pid def role_color(role): r = (role or "owner").lower() return "blue_background" if r=="executor" else ("orange_background" if r=="family" else "gray_background") def make_hero_blocks(title, role): return [ {"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"?"},"rich_text": rt("HERO_MARKER This page helps you with: " + title, bold=True),"color": role_color(role)}}, {"object":"block","type":"divider","divider":{}} ] def grid_cards(items, cols=3): n=len(items) if n==0: return [] cols=max(1, min(3, n)) columns=[[] for _ in range(cols)] # seed one per column for i in range(min(n, cols)): it = items[i] tile={"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"?"},"rich_text": rt(it.get("title","")),"color": role_color(it.get("role"))}} columns[i].append(tile) if it.get("subtitle"): columns[i].append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(it["subtitle"])}}) if it.get("page_id"): columns[i].append({"object":"block","type":"link_to_page","link_to_page":{"type":"page_id","page_id": it["page_id"]}}) columns[i].append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(" ")}}) for i in range(cols, n): it = items[i] c = i % cols tile={"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"?"},"rich_text": rt(it.get("title","")),"color": role_color(it.get("role"))}} columns[c].append(tile) if it.get("subtitle"): columns[c].append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(it["subtitle"])}}) if it.get("page_id"): columns[c].append({"object":"block","type":"link_to_page","link_to_page":{"type":"page_id","page_id": it["page_id"]}}) columns[c].append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(" ")}}) col_blocks=[{"object":"block","type":"column","column":{"children": blocks}} for blocks in columns] return [{"object":"block","type":"column_list","column_list":{}}, *col_blocks] def create_database(parent_id, title, schema): props = {} for name, spec in (schema.get("properties") or {}).items(): t = spec if isinstance(spec, str) else spec.get("type") or "rich_text" if t=="title": props[name]={"title":{}} elif t in ("text","rich_text"): props[name]={"rich_text":{}} elif t=="number": props[name]={"number":{"format":"number"}} elif t=="select": props[name]={"select":{"options":[{"name":o} for o in (spec.get("options") if isinstance(spec, dict) else [])]}} elif t=="multi_select": props[name]={"multi_select":{"options":[{"name":o} for o in (spec.get("options") if isinstance(spec, dict) else [])]}} elif t=="date": props[name]={"date":{}} elif t=="url": props[name]={"url":{}} elif t=="relation": props[name]={"relation":{"database_id": state.get("pages_index_db") or "", "type":"single_property", "single_property":{}}} elif t=="formula": expr = spec.get("formula") or spec.get("expression") or '""' props[name]={"formula":{"expression": expr}} else: props[name]={"rich_text":{}} payload = {"parent":{"type":"page_id","page_id":parent_id},"title":[{"type":"text","text":{"content":title}}],"properties":props} r = req("POST","https://api.notion.com/v1/databases", data=json.dumps(payload)) expect_ok(r, f"create DB {title}") dbid = j(r).get("id") # If Acceptance/Setup, ensure Check formula exists if dbid and (title.lower().startswith("acceptance") or title.lower().startswith("setup")): req("PATCH", f"https://api.notion.com/v1/databases/{dbid}", data=json.dumps({"properties":{"Check":{"formula":{"expression":'if(prop("Status") == "Done", "?", "")'}}}})) return dbid def insert_db_rows(dbid, rows, state): meta = j(req("GET", f"https://api.notion.com/v1/databases/{dbid}")) pmap = meta.get("properties",{}) for row in rows or []: # Merge Notes -> Note to avoid conflicts if "Notes" in row and "Note" not in row: row["Note"] = row.pop("Notes") props={} # Prefetch related page title if needed target_title = row.get("Related Page Title") or row.get("Related Page") target_pid = None if target_title and "Related Page" in pmap: # Resolve to Pages Index DB item idx_db = state.get("pages_index_db") idx_item = find_index_item_by_title(idx_db, str(target_title)) if idx_db else None if idx_item: props["Related Page"]={"relation":[{"id":idx_item}]} else: ensure_property_rich_text(dbid, "Intended Relation") props["Intended Relation"]={"rich_text": rt(f"{target_title} (not found)", italic=True, color="gray")} continue if k in ["Related Page Title","Related Page"]: if target_pid: props["Related Page"]={"relation":[{"id":target_pid}]} else: # keep a breadcrumb of intended title if "Intended Relation" in pmap: props["Intended Relation"]={"rich_text": rt(str(v), italic=True, color="gray")} continue # Title if k in pmap and pmap[k]["type"]=="title": props[k]={"title":[{"type":"text","text":{"content":str(v)}}]}; continue # Select if k in pmap and pmap[k]["type"]=="select": props[k]={"select":{"name": str(v)}}; continue # Multi-select if k in pmap and pmap[k]["type"]=="multi_select": items = v if isinstance(v,list) else [v] props[k]={"multi_select":[{"name":str(x)} for x in items]}; continue # Number if k in pmap and pmap[k]["type"]=="number": try: num=float(v) except: num=None props[k]={"number": num}; continue # Rich text for Note if k.lower() in ["note","notes"] or k.endswith(" Note"): props["Note" if "Note" in pmap else k]={"rich_text": rt(v, italic=True, color="gray")}; continue # Fallback rich_text if k in pmap: props[k]={"rich_text":[{"type":"text","text":{"content":str(v)}}]} created = req("POST","https://api.notion.com/v1/pages", data=json.dumps({"parent":{"database_id":dbid},"properties":props})) expect_ok(created, f"seed row in {dbid}") return pid # Create top-level hubs known by title (if defined in YAML) # We rely on merged["pages"] entries to create pages; hubs are inferred by matches if args.dry_run: print("DRY-RUN: would create", len(merged["pages"]), "pages and", len(merged["db"]["schemas"]), "databases") # Show a subset for p in merged["pages"][:10]: print(" - Page:", p.get("title")) for k in list(merged["db"]["schemas"].keys())[:10]: print(" - DB:", k) return # Pages Index DB first state["pages_index_db"] = ensure_pages_index_db(parent) # PREVIEW preview_plan(merged) resp = os.getenv("AUTO_YES") if not resp: resp = input("Proceed with deployment? (y/n): ").strip().lower() if resp not in ("y","yes","1","true"): print("Aborted by user.") return # Create all pages first (to resolve relations by title later) for p in merged["pages"]: upsert_page(p.get("title"), p.get("parent"), p.get("icon"), p.get("cover_png") or p.get("cover"), p.get("description"), p.get("helper"), p.get("role")) # Hero blocks already injected in create_page # Dashboards: simple grid on hubs if they exist hubs = ["Preparation Hub","Executor Hub","Family Hub"] hub_ids = {t: state["pages"].get(t) for t in hubs if state["pages"].get(t)} for hub, hid in hub_ids.items(): # Build grid of its children by scanning merged pages with parent==hub children=[p.get("title") for p in merged["pages"] if p.get("parent")==hub] items=[] for t in children: cid=state["pages"].get(t); role="owner" if hub=="Preparation Hub" else ("executor" if hub=="Executor Hub" else "family") if cid: items.append({"title":t,"subtitle":None,"page_id":cid,"role":role}) grid=grid_cards(items, cols=3) req("PATCH", f"https://api.notion.com/v1/blocks/{hid}/children", data=json.dumps({"children":grid})) # Add mobile tips to hubs add_mobile_tip(state, merged["pages"]) # Create databases for db_name, schema in merged["db"]["schemas"].items(): dbid = create_database(parent, db_name, schema) if not dbid: continue state["dbs"][db_name]=dbid # If Acceptance DB, patch its Check as a formula if db_name.lower().startswith("acceptance") or db_name=="Setup & Acceptance": # ensure formula # Update property to formula via patch (Notion doesn't support partial schema patch fully; but try) props={"properties":{"Check":{"formula":{"expression":'if(prop("Status") == "Done", "?", "")'}}}} req("PATCH", f"https://api.notion.com/v1/databases/{dbid}", data=json.dumps(props)) # Seed rows rows = (schema.get("seed_rows") or []) if rows: insert_db_rows(dbid, rows, state) # Synced blocks library (legal/letters/executor notes) def create_synced_library(): lib_id = create_page(parent, "Admin Ð Synced Library", {"type":"emoji","emoji":"??"}, None, "Master synced blocks for disclaimers and helpers.", None, None) if not lib_id: return None, {} children=[ {"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt("Legal documents: This workspace offers general guidance only. It is not legal advice."),"color":"gray_background"}}, {"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt("Letters: Confirm each recipientÕs requirements before sending."),"color":"gray_background"}}, {"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt("Executor: You donÕt have to do this all at once. Start with the first, easiest step."),"color":"gray_background"}}, ] r = req("PATCH", f"https://api.notion.com/v1/blocks/{lib_id}/children", data=json.dumps({"children":children})) data=j(r); sync_map={} for b in data.get("results", []): text="".join([t.get("plain_text","") for t in b.get("callout",{}).get("rich_text",[])]) key=text.split(":")[0] if ":" in text else text[:16] sync_map[key]=b["id"] return lib_id, sync_map def add_synced_to_pages(sync_map): pairs=[("LEGAL","Legal Documents"),("LETTERS","Letters"),("EXECUTOR","Executor Hub")] for key, page_title in pairs: pid=state["pages"].get(page_title) if not pid or key not in sync_map: continue src_id=sync_map[key] # idempotency: skip if a synced_block already references src_id existing = get_children(pid) found = False for b in existing: if b.get("type")=="synced_block": sf = b["synced_block"].get("synced_from") if sf and sf.get("block_id")==src_id: found=True; break if found: continue block={"object":"block","type":"synced_block","synced_block":{"synced_from":{"block_id":src_id}}} insert_children(pid, [block]) return {"object":"block","type":"link_to_page","link_to_page":{"type":"page_id","page_id": pid}} def add_nav_links(state, pages_cfg): # Build parent -> children mapping in listed order children_by_parent={} for p in pages_cfg: parent=p.get("parent") children_by_parent.setdefault(parent or "__ROOT__", []).append(p.get("title")) # For each page with a parent, add Back and Next links for p in pages_cfg: title=p.get("title"); parent=p.get("parent") if not parent: continue pid = state["pages"].get(title); par_id = state["pages"].get(parent) if not pid or not par_id: continue sibs = children_by_parent.get(parent, []) try: idx=sibs.index(title) except ValueError: idx=None next_pid=None if idx is not None and idx+1 < len(sibs): next_title=sibs[idx+1] next_pid = state["pages"].get(next_title) blocks=[] # Navigation group nav_children=[] nav_children.append({"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt("Back to " + parent),"color":"gray_background"}}) nav_children.append(link_to_page_block(par_id)) if next_pid: nav_children.append({"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt("Next step"),"color":"gray_background"}}) nav_children.append(link_to_page_block(next_pid)) blocks.append({"object":"block","type":"toggle","toggle":{"rich_text": rt("Navigation"),"children": nav_children}}) req("PATCH", f"https://api.notion.com/v1/blocks/{pid}/children", data=json.dumps({"children":blocks})) def add_mobile_tip(state, pages_cfg): # Treat hubs from YAML if marked, else fallback to known names hub_titles=set() for p in pages_cfg: if p.get("hub") is True: hub_titles.add(p.get("title")) if not hub_titles: hub_titles.update(["Preparation Hub","Executor Hub","Family Hub"]) tip='On phones, use the ¥¥¥ menu to jump sections. Tiles stack vertically.' for t in hub_titles: pid=state["pages"].get(t) if not pid: continue block={"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt(tip, italic=True, color="gray"),"color":"gray_background"}} req("PATCH", f"https://api.notion.com/v1/blocks/{pid}/children", data=json.dumps({"children":[block]}) ) def add_letter_legal_content(state, pages_cfg): # If a page dict includes Body/Disclaimer, render them for p in pages_cfg: title=p.get("title"); pid=state["pages"].get(title) if not pid: continue body = p.get("Body") or p.get("body") disclaimer = p.get("Disclaimer") or p.get("disclaimer") if not (body or disclaimer): continue children=[] if body: children.append({"object":"block","type":"toggle","toggle":{"rich_text": rt("Draft (expand)"),"children":[{"object":"block","type":"paragraph","paragraph":{"rich_text": rt(body)}}]}}) if disclaimer: children.append({"object":"block","type":"callout","callout":{"icon":{"type":"emoji","emoji":"??"},"rich_text": rt(disclaimer),"color":"gray_background"}}) if children: req("PATCH", f"https://api.notion.com/v1/blocks/{pid}/children", data=json.dumps({"children":children})) def get_children(pid, page_size=100): r = req("GET", f"https://api.notion.com/v1/blocks/{pid}/children?page_size={page_size}") return j(r).get("results", []) def plain_text(rtlist): return "".join([x.get("plain_text","") for x in (rtlist or [])]) def has_block_marker(pid, token): results = get_children(pid) for b in results: t = b.get("type") if t in ("paragraph","callout","toggle","bulleted_list_item","numbered_list_item","to_do"): txt = plain_text(b[t].get("rich_text",[])) if token in txt: return True if t=="synced_block": # check first child sc = req("GET", f"https://api.notion.com/v1/blocks/{b['id']}/children") scj = j(sc) for cb in scj.get("results",[]): tt = cb.get("type") if tt in ("paragraph","callout","toggle"): if token in plain_text(cb[tt].get("rich_text",[])): return True return False def insert_children(pid, blocks): return req("PATCH", f"https://api.notion.com/v1/blocks/{pid}/children", data=json.dumps({"children":blocks})) def url_join(base, filename): filename = filename.lstrip("/") return base.rstrip("/") + "/" + urllib.parse.quote(filename) def ensure_pages_index_db(parent_id): title = "Admin Ð Pages Index" # Create minimal DB schema = {"properties":{ "Name":{"type":"title"}, "Page ID":{"type":"rich_text"}, "URL":{"type":"url"} }} payload = {"parent":{"type":"page_id","page_id":parent_id}, "title":[{"type":"text","text":{"content":title}}], "properties":{"Name":{"title":{}},"Page ID":{"rich_text":{}},"URL":{"url":{}}}} r = req("POST","https://api.notion.com/v1/databases", data=json.dumps(payload)) if not expect_ok(r, "create Pages Index DB"): return None return j(r).get("id") def upsert_pages_index_row(dbid, title, pid): # Build URL (Notion doesn't expose public URL via API; leave blank or use internal scheme if known) url = None # Query by title exact match q = req("POST", f"https://api.notion.com/v1/databases/{dbid}/query", data=json.dumps({"page_size":5, "filter":{"property":"Name","title":{"equals": title}}})) data = j(q) existing = (data.get("results") or []) props={"Name":{"title":[{"type":"text","text":{"content":title}}]},"Page ID":{"rich_text": rt(pid)}} if url: props["URL"]={"url": url} if existing: page_id = existing[0]["id"] req("PATCH", f"https://api.notion.com/v1/pages/{page_id}", data=json.dumps({"properties":props})) return page_id else: cr = req("POST","https://api.notion.com/v1/pages", data=json.dumps({"parent":{"database_id":dbid},"properties":props})) if expect_ok(cr, "insert pages index row"): return j(cr).get("id") return None def ensure_property_rich_text(dbid, name): meta = j(req("GET", f"https://api.notion.com/v1/databases/{dbid}")) if name in meta.get("properties", {}): return req("PATCH", f"https://api.notion.com/v1/databases/{dbid}", data=json.dumps({"properties":{name:{"rich_text":{}}}})) def find_index_item_by_title(dbid, title): q = req("POST", f"https://api.notion.com/v1/databases/{dbid}/query", data=json.dumps({"page_size":10, "filter":{"property":"Name","title":{"equals": title}}})) data = j(q) for res in data.get("results",[]): return res.get("id") return None def query_database_all(dbid): has_more=True; start=None; results=[] while has_more: payload = {"page_size":100} if start: payload["start_cursor"]=start r = req("POST", f"https://api.notion.com/v1/databases/{dbid}/query", data=json.dumps(payload)) if not expect_ok(r, f"query DB {dbid}"): break data = j(r) results.extend(data.get("results",[])) has_more = data.get("has_more") start = data.get("next_cursor") return results def update_rollout_summary(state): # Find Acceptance DB id acc = None for name, dbid in state.get("dbs",{}).items(): if name.lower().startswith("acceptance") or name.lower().startswith("setup"): acc = dbid; break if not acc: return rows = query_database_all(acc) # compute by 'Section' (fallback 'Role' or 'Category') def read_prop(page, key): p = page.get("properties",{}).get(key) if not p: return None t = p.get("type") if t=="select": return p["select"]["name"] if p.get("select") else None if t=="title": return plain_text(p["title"]) if t=="rich_text": return plain_text(p["rich_text"]) return None summary={} total=0; done=0 for r in rows: section = read_prop(r, "Section") or read_prop(r, "Role") or "General" status = read_prop(r, "Status") or "" total += 1 if section not in summary: summary[section]={"total":0,"done":0} summary[section]["total"] += 1 if status.lower()=="done": summary[section]["done"] += 1 done += 1 remaining = total - done # Upsert "Admin Ð Rollout Summary" page title = "Admin Ð Rollout Summary" pid = state["pages"].get(title) if not pid: pid = create_page(parent, title, {"type":"emoji","emoji":"??"}, None, "Live deployment progress summary.", None, None) state["pages"][title]=pid # Build table as paragraphs blocks=[ {"object":"block","type":"paragraph","paragraph":{"rich_text": rt("ROLLUP_START")}}, {"object":"block","type":"paragraph","paragraph":{"rich_text": rt(f"Total: {total} ¥ Done: {done} ¥ Remaining: {remaining}")}}, {"object":"block","type":"divider","divider":{}}, ] for sec, v in sorted(summary.items()): pct = 0 if v["total"]==0 else int(round(100 * v["done"]/v["total"])) blocks.append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt(f"{sec}: {v['done']}/{v['total']} ({pct}%)")}}) blocks.append({"object":"block","type":"paragraph","paragraph":{"rich_text": rt("ROLLUP_END")}}) insert_children(pid, blocks) def preview_plan(merged): total_pages = len(merged.get("pages", [])) total_dbs = len(merged.get("db", {}).get("schemas", {})) print("=== Deployment Preview ===") print(f"Pages to ensure: {total_pages}") print(f"Databases to ensure: {total_dbs}") # list top-level page titles for p in merged.get("pages", [])[:10]: print(" -", p.get("title")) if total_pages > 10: print(f" ... (+{total_pages-10} more)") def list_children(block_id, page_size=100): r = req("GET", f"https://api.notion.com/v1/blocks/{block_id}/children?page_size={page_size}") try: return r.json().get("results", []) except Exception: return [] TEXTUAL = {"paragraph","callout","toggle","bulleted_list_item","numbered_list_item","to_do","quote","heading_1","heading_2","heading_3"} def block_plain_text(b): t = b.get("type") if t in TEXTUAL: rt = b[t].get("rich_text", []) return "".join([seg.get("plain_text","") for seg in rt]) return "" def has_block_marker_recursive(block_id, token, max_depth=2): # Search for `token` in this block's subtree (limited depth). stack = [(block_id, 0)] while stack: bid, depth = stack.pop() for child in list_children(bid): if token in block_plain_text(child): return True if depth < max_depth: t = child.get("type") if t == "column_list": # Notion API doesn't return nested children directly; still push child id to traverse stack.append((child["id"], depth+1)) elif t in ("column","toggle","callout"): stack.append((child["id"], depth+1)) return False def ensure_synced_library(state, library_page_title="Synced Library"): # Ensure a master page that holds original synced blocks exists; return page_id. pid = state["pages"].get(library_page_title) if pid: return pid payload = { "parent": {"type":"page_id","page_id": state.get("root_page_id") or state.get("root")}, "icon": {"type":"emoji","emoji":"??"}, "properties": {"title":{"title":[{"type":"text","text":{"content":library_page_title}}]}}, } r = req("POST","https://api.notion.com/v1/pages", data=json.dumps(payload)) if expect_ok(r, "create synced library"): new_id = r.json().get("id") state["pages"][library_page_title]=new_id return new_id return None def ensure_sync_original(state, lib_pid, sync_key, content=""): # Create (or find) an original synced_block tagged with SYNC_KEY::. children = list_children(lib_pid) for b in children: if b.get("type") == "synced_block" and b["synced_block"].get("synced_from") is None: inner = list_children(b["id"]) for c in inner: if sync_key in (block_plain_text(c) or ""): return b["id"] blocks = [{ "object":"block","type":"synced_block", "synced_block":{"synced_from": None, "children":[ {"object":"block","type":"callout","callout":{ "icon":{"type":"emoji","emoji":"??"}, "rich_text":[{"type":"text","text":{"content":f"{sync_key}"}},{"type":"text","text":{"content":" ¥ Do not edit this marker text"}}], "color":"gray_background" }}, {"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content": content or "Synced original content"}}]}} ]} }] r = req("PATCH", f"https://api.notion.com/v1/blocks/{lib_pid}/children", data=json.dumps({"children":blocks})) if expect_ok(r, "create sync original"): for res in r.json().get("results", []): if res.get("type") == "synced_block": return res.get("id") return None def add_synced_reference_if_absent(target_page_id, original_block_id, sync_key): # Insert a synced reference to original into target, if marker absent. if has_block_marker_recursive(target_page_id, sync_key): return True block = { "object":"block","type":"synced_block", "synced_block":{"synced_from":{"block_id": original_block_id}} } r = req("PATCH", f"https://api.notion.com/v1/blocks/{target_page_id}/children", data=json.dumps({"children":[block]})) return expect_ok(r, f"add sync ref {sync_key}") === END SOURCE: deploy/deploy.py === === BEGIN YAML: 00_admin.yaml === pages: - title: Admin Ð Release Notes icon: emoji:??? role: owner description: Version history for this template (safe to delete before sharing). icon_file: assets/icons/admin-release-notes-icon.svg cover_file: assets/covers/admin-release-notes-cover.svg icon_png: assets/icons_png/preparation-hub-icon.png cover_png: assets/covers_png/preparation-hub-cover.png - title: Admin Ð Rollout Cockpit icon: emoji:?? description: Quick access to the Setup & Acceptance DB with guidance for useful views. icon_file: assets/icons/admin-rollout-cockpit-icon.svg cover_file: assets/covers/admin-rollout-cockpit-cover.svg icon_png: assets/icons_png/executor-hub-icon.png cover_png: assets/covers_png/executor-hub-cover.png - title: Admin Ð Diagnostics icon: emoji:?? description: 'Checks that help you finish setup: missing icons/covers and pages still carrying helpers.' icon_file: assets/icons/admin-diagnostics-icon.svg cover_file: assets/covers/admin-diagnostics-cover.svg icon_png: assets/icons_png/legal-documents-icon.png cover_png: assets/covers_png/legal-documents-cover.png - title: Admin Ð Final UI Checklist icon: emoji:? description: Confirm premium UI polish is complete, then delete this page. helper: instructions: - Start Here shows 3 hub cards (grid) + first-run checklist. - Each Hub shows section cards (grid) with clear spacing and captions. - All user pages have a hero block at the top. - Every user page has Back-to-Hub (top) and Next step (bottom). - Letters/Legal long text is under a collapsible toggle. - Role colors are consistent inside pages (Executor blue / Family peach / Preparation teal). - QR pages have a portal callout at the top. - Mobile tips present on Start/Hub pages. - PNG icons/covers render everywhere (desktop + mobile). - No seeded/fake data anywhere. === END YAML: 00_admin.yaml === === BEGIN YAML: 00_copy_registry.yaml === copy_registry: preparation-hub: description: A steady starting place. Work at your pace; each step waits for you. executor-hub: description: Practical steps for carrying out wishes. Keep documents together and note what you complete. disclaimer: These pages are practical guidance only and not legal advice. Confirm local requirements. family-hub: description: A gentle place for photos, notes, and memories that matter. legal-living-will: description: A soft, non-legal sample to help you consider choices. Speak with your attorney for a valid document. disclaimer: Sample only; not legal advice. qr-family-essentials: description: QR links for the few pages your family may need quickly. Share only when ready. qr-executor-full: description: QR links to every section your executor will need. Keep this secure. executor-checklist: description: Start here after the passing. Some steps are time-sensitive; move steadily, one task at a time. disclaimer: This is practical guidance, not legal advice. life-insurance: description: Add policy documents and confirm beneficiaries. Note claim phone numbers and hours. disclaimer: Policies differ by carrier; verify requirements. subscriptions: description: List recurring charges so nothing continues unnoticed. Capture login details and next billing dates. messages-for-family: description: Short notes youÕd like loved ones to read, in your own words. === END YAML: 00_copy_registry.yaml === === BEGIN YAML: 01_pages_core.yaml === pages: - title: Preparation Hub icon: emoji:?? description: Your personal starting place to set everything in motion. role: owner slug: preparation-hub icon_file: assets/icons/preparation-hub-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/preparation-hub-cover.svg icon_png: assets/icons_png/preparation-hub-icon.png cover_png: assets/covers_png/preparation-hub-cover.png - title: Executor Hub icon: emoji:????? description: Resources your executor will use to honor your wishes. role: executor disclaimer: This section offers practical guidance; it is not legal advice. slug: executor-hub icon_file: assets/icons/executor-hub-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/executor-hub-cover.svg icon_png: assets/icons_png/executor-hub-icon.png cover_png: assets/covers_png/executor-hub-cover.png - title: Family Hub icon: emoji:?? description: Gentle guidance and memories for family. role: family slug: family-hub icon_file: assets/icons/family-hub-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/family-hub-cover.svg icon_png: assets/icons_png/family-hub-icon.png cover_png: assets/covers_png/family-hub-cover.png - title: Legal Documents icon: emoji:?? description: Important documents and samples (not legal advice). role: owner icon_file: assets/icons/legal-documents-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/legal-documents-cover.svg icon_png: assets/icons_png/legal-documents-icon.png cover_png: assets/covers_png/legal-documents-cover.png - title: Financial Accounts icon: emoji:?? description: Accounts, cards, and institutions to settle and notify. role: owner icon_file: assets/icons/financial-accounts-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/financial-accounts-cover.svg icon_png: assets/icons_png/financial-accounts-icon.png cover_png: assets/covers_png/financial-accounts-cover.png - title: Property & Assets icon: emoji:?? description: Homes, vehicles, valuables, and digital assets. role: owner icon_file: assets/icons/property-assets-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/property-assets-cover.svg icon_png: assets/icons_png/property-assets-icon.png cover_png: assets/covers_png/property-assets-cover.png - title: Insurance icon: emoji:??? description: Policies and claims info. role: owner icon_file: assets/icons/insurance-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/insurance-cover.svg icon_png: assets/icons_png/insurance-icon.png cover_png: assets/covers_png/insurance-cover.png - title: Subscriptions icon: emoji:?? description: Recurring services to cancel or transfer. role: owner icon_file: assets/icons/subscriptions-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/subscriptions-cover.svg icon_png: assets/icons_png/subscriptions-icon.png cover_png: assets/covers_png/subscriptions-cover.png - title: Letters icon: emoji:?? description: Ready-to-adapt letters for banks, utilities, and more. role: owner icon_file: assets/icons/letters-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/letters-cover.svg icon_png: assets/icons_png/letters-icon.png cover_png: assets/covers_png/letters-cover.png - title: Memories & Keepsakes icon: emoji:?? description: Notes, photos, and stories worth saving. role: family icon_file: assets/icons/memories-keepsakes-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/memories-keepsakes-cover.svg icon_png: assets/icons_png/memories-keepsakes-icon.png cover_png: assets/covers_png/memories-keepsakes-cover.png - title: Contacts icon: emoji:?? description: People and organizations who matter in this process. role: owner icon_file: assets/icons/contacts-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/contacts-cover.svg icon_png: assets/icons_png/contacts-icon.png cover_png: assets/covers_png/contacts-cover.png - title: QR Codes icon: emoji:?? description: Pages linked by printed QR codes. role: owner icon_file: assets/icons/qr-codes-icon.svg cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 cover_file: assets/covers/qr-codes-cover.svg icon_png: assets/icons_png/qr-codes-icon.png cover_png: assets/covers_png/qr-codes-cover.png - title: Living Will Ð Sample Document parent: Legal Documents icon: emoji:?? description: A gentle example to help you think through choices. role: owner disclaimer: Sample language only; not legal advice. slug: legal-living-will cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Power of Attorney Ð Sample parent: Legal Documents icon: emoji:?? description: Sample wording to discuss with your attorney. role: owner disclaimer: Sample only; not legal advice. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Advance Directive Ð Sample parent: Legal Documents icon: emoji:?? role: owner description: Guidance to capture your preferences. disclaimer: Sample only; not legal advice. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Trust Ð Sample Outline parent: Legal Documents icon: emoji:?? role: owner description: Common sections to consider with counsel. disclaimer: Informational only; not legal advice. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Executor Checklist parent: Executor Hub icon: emoji:? role: executor description: A practical list of the first tasks to complete. disclaimer: Checklist is informational; confirm local requirements. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Bank & Account Access Notes parent: Executor Hub icon: emoji:?? role: executor description: Where to find account details and documents. disclaimer: Handle credentials securely. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Funeral & Memorial Preferences parent: Executor Hub icon: emoji:??? role: executor description: Notes to guide thoughtful arrangements. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Messages for Family parent: Family Hub icon: emoji:?? role: family description: Short notes youÕd like loved ones to read. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Keepsakes Index parent: Family Hub icon: emoji:?? role: family description: A list of items with stories attached. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Primary Bank Accounts parent: Financial Accounts icon: emoji:?? role: owner description: Main checking/savings with contact details. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Credit Cards parent: Financial Accounts icon: emoji:?? role: owner description: Active cards and closure notes. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Brokerage & Retirement parent: Financial Accounts icon: emoji:?? role: owner description: Investment and retirement accounts. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Real Estate parent: Property & Assets icon: emoji:?? role: owner description: Properties with addresses, contacts, documents. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Vehicles parent: Property & Assets icon: emoji:?? role: owner description: Cars, motorcyclesÑVINs, titles, insurers. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Digital Assets parent: Property & Assets icon: emoji:?? role: owner description: Domains, wallets, important logins. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Life Insurance parent: Insurance icon: emoji:?? role: owner description: Policies, beneficiaries, contact paths. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Homeowners/Renters parent: Insurance icon: emoji:?? role: owner description: Policy numbers, adjuster contacts. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Health Insurance parent: Insurance icon: emoji:?? role: owner description: Carrier, member IDs, claims steps. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Streaming Services parent: Subscriptions icon: emoji:?? role: owner description: Netflix, Spotify, etc.Ñhow to cancel. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Utilities parent: Subscriptions icon: emoji:?? role: owner description: Electric, gas, waterÑaccount numbers, final meter reads. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: Online Services parent: Subscriptions icon: emoji:?? role: owner description: Web tools with billing attached. cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: QR Ð Family Essentials parent: QR Codes icon: emoji:?? role: owner description: A small set of pages for family to access quickly. slug: qr-family-essentials cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 - title: QR Ð Full Access for Executor parent: QR Codes icon: emoji:?? role: owner description: Links to all sections your executor will need. slug: qr-executor-full cover: https://images.unsplash.com/photo-1530027621759-7b31d11a3a48?w=1200&q=80 === END YAML: 01_pages_core.yaml === === BEGIN YAML: 02_pages_extended.yaml === pages: - title: Executor Task 01 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-01 - title: Executor Task 02 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-02 - title: Executor Task 03 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-03 - title: Executor Task 04 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-04 - title: Executor Task 05 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-05 - title: Executor Task 06 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-06 - title: Executor Task 07 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-07 - title: Executor Task 08 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-08 - title: Executor Task 09 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-09 - title: Executor Task 10 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-10 - title: Executor Task 11 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-11 - title: Executor Task 12 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-12 - title: Executor Task 13 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-13 - title: Executor Task 14 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-14 - title: Executor Task 15 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-15 - title: Executor Task 16 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-16 - title: Executor Task 17 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-17 - title: Executor Task 18 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-18 - title: Executor Task 19 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-19 - title: Executor Task 20 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-20 - title: Executor Task 21 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-21 - title: Executor Task 22 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-22 - title: Executor Task 23 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-23 - title: Executor Task 24 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-24 - title: Executor Task 25 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-25 - title: Executor Task 26 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-26 - title: Executor Task 27 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-27 - title: Executor Task 28 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-28 - title: Executor Task 29 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-29 - title: Executor Task 30 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-30 - title: Executor Task 31 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-31 - title: Executor Task 32 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-32 - title: Executor Task 33 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-33 - title: Executor Task 34 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-34 - title: Executor Task 35 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-35 - title: Executor Task 36 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-36 - title: Executor Task 37 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-37 - title: Executor Task 38 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-38 - title: Executor Task 39 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-39 - title: Executor Task 40 parent: Executor Hub icon: emoji:?? role: executor description: A focused action item with context and space for notes. slug: executor-task-40 - title: Executor Guide Ð SSA Notification parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-ssa-notification - title: Executor Guide Ð IRS Final Return Notes parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-irs-final-return-notes - title: Executor Guide Ð DMV Title Transfer parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-dmv-title-transfer - title: Executor Guide Ð USPS Mail Forwarding parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-usps-mail-forwarding - title: Executor Guide Ð Mortgage Servicer parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-mortgage-servicer - title: Executor Guide Ð Landlord/HOA parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-landlord/hoa - title: Executor Guide Ð Pension/401(k) Administrator parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-pension/401(k)-administrator - title: Executor Guide Ð Brokerage Transfer parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-brokerage-transfer - title: Executor Guide Ð Credit Bureaus (Equifax/Experian/TransUnion) parent: Executor Hub icon: emoji:?? role: executor description: Instructions and links to complete this step. slug: executor-guide-credit-bureaus-(equifax/experian/transunion) - title: Digital Assets Ð Passwords & Access Hints parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-passwords-access-hints - title: Digital Assets Ð Email Accounts parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-email-accounts - title: Digital Assets Ð Cloud Storage parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-cloud-storage - title: Digital Assets Ð Photo Archives parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-photo-archives - title: Digital Assets Ð Domain Names parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-domain-names - title: Digital Assets Ð Crypto Wallets parent: Property & Assets icon: emoji:?? role: owner description: Where to find and how to handle this item. slug: digital-assets-crypto-wallets - title: Letters of Sympathy (Optional) parent: Family Hub icon: emoji:?? role: family description: Optional items to help the family remember and gather. slug: letters-of-sympathy-(optional) - title: Memorial Playlist parent: Family Hub icon: emoji:?? role: family description: Optional items to help the family remember and gather. slug: memorial-playlist - title: Photo Collage Plan parent: Family Hub icon: emoji:?? role: family description: Optional items to help the family remember and gather. slug: photo-collage-plan - title: Memorial Guestbook parent: Family Hub icon: emoji:?? role: family description: Optional items to help the family remember and gather. slug: memorial-guestbook === END YAML: 02_pages_extended.yaml === === BEGIN YAML: 03_letters.yaml === letters: - Title: Bank Notification Ð Deceased Account Holder Audience: Bank Category: Financial Body: Dear [insert appropriate detail] , IÕm writing to inform you of the passing of [insert appropriate detail] . IÕm assisting with the estate and would appreciate guidance on required documents... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Credit Card Closure Request Audience: Credit Card Category: Financial Body: Hello [insert appropriate detail] , Please close the account ending in [insert appropriate detail] for [insert appropriate detail] , who has passed away. Attached are the documents you requested... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Utility Account Transfer/Closure Audience: Utility Category: Household Body: To [insert appropriate detail] , Please transfer or close services for the account at [insert appropriate detail] . The account holder, [insert appropriate detail] , has passed away... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Insurance Claim Notification Audience: Insurance Category: Insurance Body: Dear Claims Department, This is to notify you of a claim for policy [insert appropriate detail] for [insert appropriate detail] . Please advise on next steps... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Employer HR Notification Audience: Employer Category: Employment Body: Dear HR, IÕm writing regarding [insert appropriate detail] . Would you guide us through any benefits, payroll, or COBRA steps that apply? Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Subscription Cancellation (General) Audience: Provider Category: Digital Body: Hello, Please cancel the subscription for [insert appropriate detail] associated with [insert appropriate detail] . The account holder [insert appropriate detail] has passed away... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Social Media Memorialization Audience: Platform Category: Digital Body: Hello [insert appropriate detail] , Please memorialize or close the account for [insert appropriate detail] . I can provide documentation as needed... Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: SSA Notification of Death Audience: Agency Category: Government Body: 'To the Social Security Administration: IÕm writing to report the passing of [insert appropriate detail] , SSN ending [insert appropriate detail] . Please advise documentation required.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: IRS Final Return & Estate EIN Audience: Agency Category: Government Body: 'To the IRS: Please guide us on filing the final return for [insert appropriate detail] and obtaining an EIN for the estate, if required.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: DMV Title Transfer Request Audience: Agency Category: Transportation Body: 'To the DMV: Please provide instructions to transfer vehicle title(s) for [insert appropriate detail] . Documentation can be provided.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: USPS Mail Forwarding for Estate Audience: Agency Category: Mail Body: 'To the USPS: Please enable forwarding for mail addressed to [insert appropriate detail] to [insert appropriate detail] for estate administration.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Mortgage Servicer Notice Audience: Lender Category: Financial Body: 'To the Servicer: Please note the passing of [insert appropriate detail] , borrower on loan [insert appropriate detail] . Kindly advise on next steps.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Landlord/HOA Notification Audience: Housing Category: Housing Body: Hello, This is to inform you of the passing of [insert appropriate detail] . We will coordinate keys, dues, and next steps with your guidance. Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Pension/401(k) Administrator Notice Audience: Plan Admin Category: Retirement Body: 'To the Plan Administrator: Please guide beneficiary claim steps for [insert appropriate detail] under plan [insert appropriate detail] .' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Brokerage Transfer/Beneficiary Claim Audience: Brokerage Category: Financial Body: 'To [insert appropriate detail] : Please advise on beneficiary claim or transfer of assets for account(s) owned by [insert appropriate detail] .' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Credit Bureaus Deceased Flag Audience: Credit Bureau Category: Financial Body: 'To [insert appropriate detail] : Please place a deceased flag on the credit file for [insert appropriate detail] to help prevent fraud. Supporting documents available.' Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Cover Letter Ð Family Essentials QR Pack Audience: Family Category: QR Pack Body: IÕve included a few QR codes that open only the pages youÕll likely need first. They donÕt expose everything, just the essentials. Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. - Title: Cover Letter Ð Full Executor QR Pack Audience: Executor Category: QR Pack Body: These QR codes open all sections the executor will need. Please keep them secure and use them only when itÕs time to act. Prompt: Use the details on this page (names, account numbers, addresses, dates) to customize the draft. Keep the tone respectful and concise. Disclaimer: Suggested draft only; confirm recipient requirements. === END YAML: 03_letters.yaml === === BEGIN YAML: 04_databases.yaml === db: schemas: Accounts: properties: Name: title Institution: text Type: select 'Account #': text Notes: text Related Page: type: relation database_id_ref: pages by_title: true Tags: type: multi_select options: - Critical - Tax - Transfer - Beneficiaries Note: type: rich_text seed_rows: - Name: Bank Accounts Institution: '' Type: Bank 'Account #': '' Notes: List each account; add closure/transfer steps. Related Page Title: Financial Accounts - Name: Retirement Accounts Institution: '' Type: Retirement 'Account #': '' Notes: Add beneficiaries; rollover instructions. Related Page Title: Financial Accounts - Name: Brokerage Ð Taxable (Individual) Institution: '' Type: Brokerage 'Account #': '' Notes: DTC transfer form; cost basis statements; TOD (transfer-on-death) designation; medallion signature guarantee if required. Related Page Title: Financial Accounts - Name: Brokerage Ð Taxable (Joint) Institution: '' Type: Brokerage 'Account #': '' Notes: Joint tenancy details; survivorship; DTC transfer; cost basis docs; beneficiary/TOD where applicable. Related Page Title: Financial Accounts - Name: Brokerage Ð Traditional IRA Institution: '' Type: Retirement 'Account #': '' Notes: Custodian transfer/rollover process; beneficiary designation; RMD considerations if applicable. Related Page Title: Financial Accounts - Name: Brokerage Ð Roth IRA Institution: '' Type: Retirement 'Account #': '' Notes: Custodian transfer/rollover; beneficiary designation; tax treatment notes. Related Page Title: Financial Accounts - Name: Brokerage Ð 529 College Savings Institution: '' Type: Education 'Account #': '' Notes: Plan administrator; successor owner/beneficiary change process; distribution rules. Related Page Title: Financial Accounts - Name: Credit Cards Institution: '' Type: Credit Card 'Account #': '' Notes: Cancel cards; reconcile statements; disable autopay. Related Page Title: Financial Accounts Property: properties: Name: title Type: select Identifier: text Notes: text seed_rows: - Name: Primary Residence Type: Real Estate Identifier: '' Notes: Deed/mortgage details; utility handoff. - Name: Vehicle Type: Vehicle Identifier: '' Notes: Title; registration; insurance carrier. - Name: Safe Deposit Box Type: Asset Identifier: '' Notes: Location; access rules; key custody. Insurance: properties: Policy: title Carrier: text Type: select 'Policy #': text Notes: text Related Page: type: relation database_id_ref: pages by_title: true Tags: type: multi_select options: - Life - Health - Property - Auto - Claims Note: type: rich_text seed_rows: - Name: Life Insurance Type: Life Carrier: '' 'Policy #': '' Notes: Claim initiation steps; beneficiary process. Related Page Title: Insurance - Name: Health Insurance Type: Health Carrier: '' 'Policy #': '' Notes: Coverage end date; outstanding claims. Related Page Title: Insurance - Name: Home Insurance Type: Home Carrier: '' 'Policy #': '' Notes: Property coverage; claims contact. Related Page Title: Insurance - Name: Auto Insurance Type: Auto Carrier: '' 'Policy #': '' Notes: Cancel/transfer policy; proof of sale for vehicle. Related Page Title: Insurance Contacts: properties: Name: title Role: select Email: text Phone: text Notes: text Tags: type: multi_select options: - Legal - Executor - Finance - Family - Urgent Note: type: rich_text seed_rows: - Name: Attorney Role: Attorney Email: '' Phone: '' Notes: Primary legal point of contact. Tags: - Legal - Name: Executor Role: Executor Email: '' Phone: '' Notes: Primary executor contact. Tags: - Executor - Name: Accountant/Tax Role: Accountant/Tax Email: '' Phone: '' Notes: Year-of-death return; filings. Tags: - Finance - Name: Primary Family Contact Role: Family Email: '' Phone: '' Notes: Coordinator for family communications. Tags: - Family Subscriptions: properties: Service: title Category: select Account Email: text Notes: text Tags: type: multi_select options: - Critical - Recurring - Optional Note: type: rich_text seed_rows: - Name: Utilities Type: Utilities Provider: '' 'Account #': '' Notes: Electric, gas, water, internet, phone. Tags: - Critical - Recurring - Name: Digital Services Type: Digital Provider: '' 'Account #': '' Notes: Streaming, storage, software subscriptions. Tags: - Recurring - Name: Memberships Type: Membership Provider: '' 'Account #': '' Notes: Gyms, clubs, associations. Tags: - Optional Keepsakes: properties: Title: title Story: text Where: text Tags: type: multi_select options: - Photos - Stories - Letters seed_rows: - Title: Photos Story: '' Where: Add location of albums/drives. - Title: Stories Story: Write a memory that matters Ñ a moment, a lesson, a laugh. Where: '' - Title: Letters Story: If youÕd like, add a note for someone special. Where: '' Letters Index: properties: Title: title Audience: select Category: type: multi_select options: - Banking - Credit Cards - Utilities - Insurance - Mortgage - Employment - Government - Benefits - Subscriptions - Brokerage URL: url Related Page: type: relation database_id_ref: pages by_title: true Note: type: rich_text seed_rows: - Title: Letter Ð Banks Audience: Institution Category: Banking URL: '' Related Page Title: Letter Ð Banks Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Credit Card Issuers Audience: Institution Category: Credit Cards URL: '' Related Page Title: Letter Ð Credit Card Issuers Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Utilities Audience: Institution Category: Utilities URL: '' Related Page Title: Letter Ð Utilities Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Insurance Companies Audience: Institution Category: Insurance URL: '' Related Page Title: Letter Ð Insurance Companies Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Mortgage/Servicer Audience: Institution Category: Mortgage URL: '' Related Page Title: Letter Ð Mortgage/Servicer Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Employer/HR Audience: Employer Category: Employment URL: '' Related Page Title: Letter Ð Employer/HR Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Social Security Administration Audience: Agency Category: Government URL: '' Related Page Title: Letter Ð Social Security Administration Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Pension/Benefits Audience: Plan Category: Benefits URL: '' Related Page Title: Letter Ð Pension/Benefits Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Subscriptions & Services Audience: Provider Category: Subscriptions URL: '' Related Page Title: Letter Ð Subscriptions & Services Note: This entry links to the letterÕs page. Review and tailor before sending. - Title: Letter Ð Brokerage Firms Audience: Institution Category: Brokerage URL: '' Related Page Title: Letter Ð Brokerage Firms Note: This entry links to the letterÕs page. Review and tailor before sending. === END YAML: 04_databases.yaml === === BEGIN YAML: 08_ultra_premium_db_patch.yaml === # 08_ultra_premium_db_patch.yaml # Ultra-Premium Phase A: Advanced DB Architecture db: schemas: Transactions: properties: Name: { type: title } Date: { type: date } Amount: { type: number } Type: type: select options: [Deposit, Withdrawal, Transfer, Dividend, Interest, Fee] Related Page: type: relation Note: { type: rich_text } Archive Flag: type: formula formula: 'if(prop("Type") == "Fee" and prop("Amount") < 0, "Archive", if(prop("Amount") == 0, "Archive", "Active"))' "Property Maintenance Logs": properties: Name: { type: title } Date: { type: date } Cost: { type: number } Category: type: select options: [HVAC, Plumbing, Roofing, Landscaping, Electrical, General] Vendor: { type: rich_text } Related Page: type: relation Note: { type: rich_text } Archive Flag: type: formula formula: 'if(prop("Cost") == 0, "Archive", "Active")' "Insurance Claims": properties: Name: { type: title } "Claim #": { type: rich_text } Policy Type: type: select options: [Home, Auto, Life, Disability, Health, Other] Status: type: select options: [Open, Submitted, In Review, Approved, Denied, Paid, Closed] Date Filed: { type: date } Estimated Amount: { type: number } Related Page: type: relation Note: { type: rich_text } Archive Flag: type: formula formula: 'if(prop("Status") == "Closed" or prop("Status") == "Paid", "Archive", "Active")' "Estate Analytics": properties: Name: { type: title } Manual Liquid Assets: { type: number } Manual Real Property Value: { type: number } Manual Insurance Coverage: { type: number } "Total Liquid Assets": type: formula formula: 'if(empty(prop("UI: Liquid Assets")), prop("Manual Liquid Assets"), prop("UI: Liquid Assets"))' "Total Real Property Value": type: formula formula: 'if(empty(prop("UI: Real Property Value")), prop("Manual Real Property Value"), prop("UI: Real Property Value"))' "Total Insurance Coverage": type: formula formula: 'if(empty(prop("UI: Insurance Coverage")), prop("Manual Insurance Coverage"), prop("UI: Insurance Coverage"))' "Total Estate Value": type: formula formula: 'prop("Total Liquid Assets") + prop("Total Real Property Value") + prop("Total Insurance Coverage")' "Estate Tax Liability": type: formula formula: 'if(prop("Total Estate Value") > 13120000, (prop("Total Estate Value") - 13120000) * 0.40, 0)' "Completion %": type: formula formula: 'if(empty(prop("UI: Tasks Done %")), 0, prop("UI: Tasks Done %"))' "Progress Bar": type: formula formula: 'slice("??????????", 0, toNumber(round(prop("Completion %")/10))) + slice("??????????", 0, toNumber(10 - round(prop("Completion %")/10)))' property_patches: Accounts: add_properties: Archive Flag: type: formula formula: 'if(prop("Status") == "Closed", "Archive", "Active")' "Account Progress %": type: formula formula: 'if(empty(prop("UI: Tasks Done %")), 0, prop("UI: Tasks Done %"))' "Account Progress Bar": type: formula formula: 'slice("??????????", 0, toNumber(round(prop("Account Progress %")/10))) + slice("??????????", 0, toNumber(10 - round(prop("Account Progress %")/10)))' Properties: add_properties: Archive Flag: type: formula formula: 'if(empty(prop("Deed Stored?")), "Active", "Archive")' "Property Progress %": type: formula formula: 'if(empty(prop("UI: Tasks Done %")), 0, prop("UI: Tasks Done %"))' "Property Progress Bar": type: formula formula: 'slice("??????????", 0, toNumber(round(prop("Property Progress %")/10))) + slice("??????????", 0, toNumber(10 - round(prop("Property Progress %")/10)))' Insurance: add_properties: Archive Flag: type: formula formula: 'if(prop("Policy Active?") == "No", "Archive", "Active")' "Insurance Progress %": type: formula formula: 'if(empty(prop("UI: Tasks Done %")), 0, prop("UI: Tasks Done %"))' "Insurance Progress Bar": type: formula formula: 'slice("??????????", 0, toNumber(round(prop("Insurance Progress %")/10))) + slice("??????????", 0, toNumber(10 - round(prop("Insurance Progress %")/10)))' seed_rows: Transactions: - Name: "Payroll Deposit" Date: { start: "2025-07-31" } Amount: 4200.00 Type: Deposit Related Page Title: "Account Ð Checking (Everyday)" Note: "Employer: Wayfinder Labs Ñ monthly salary" - Name: "Mortgage Payment" Date: { start: "2025-08-01" } Amount: -2750.00 Type: Withdrawal Related Page Title: "Account Ð Checking (Everyday)" Note: "Auto-debit to Home Mortgage Services" - Name: "Brokerage Dividend" Date: { start: "2025-08-15" } Amount: 186.42 Type: Dividend Related Page Title: "Account Ð Brokerage (Long-term)" Note: "Vanguard Total Market ETF (VTI) quarterly distribution" - Name: "Bank Fee" Date: { start: "2025-08-20" } Amount: -12.00 Type: Fee Related Page Title: "Account Ð Checking (Everyday)" Note: "Out-of-network ATM fee" "Property Maintenance Logs": - Name: "HVAC Seasonal Service" Date: { start: "2025-05-10" } Cost: 189.00 Category: HVAC Vendor: "Comfort Air Co." Related Page Title: "Property Ð Primary Residence (Maple St.)" Note: "Filter change + coolant top-up" - Name: "Roof Inspection" Date: { start: "2025-06-22" } Cost: 0 Category: Roofing Vendor: "TopLine Roofing" Related Page Title: "Property Ð Primary Residence (Maple St.)" Note: "Annual inspection Ñ no issues" - Name: "Sprinkler Repair" Date: { start: "2025-07-07" } Cost: 120.00 Category: Landscaping Vendor: "GreenLeaf" Related Page Title: "Property Ð Primary Residence (Maple St.)" Note: "Valve replacement; zone 3" "Insurance Claims": - Name: "Home Water Damage Claim" "Claim #": "HMD-2025-0811" Policy Type: Home Status: Submitted Date Filed: { start: "2025-08-11" } Estimated Amount: 4800.00 Related Page Title: "Insurance Ð Homeowners (Maple St.)" Note: "Dishwasher line leak; adjuster scheduled 08/14" - Name: "Auto Glass Claim" "Claim #": "AUTO-GL-2025-0802" Policy Type: Auto Status: Approved Date Filed: { start: "2025-08-02" } Estimated Amount: 395.00 Related Page Title: "Insurance Ð Auto (Civic)" Note: "Windshield replacement Ð Safelite" "Estate Analytics": - Name: "Estate Overview" Manual Liquid Assets: 55000 Manual Real Property Value: 650000 Manual Insurance Coverage: 250000 === END YAML: 08_ultra_premium_db_patch.yaml === === BEGIN YAML: 09_admin_rollout_setup.yaml === # 09_admin_rollout_setup.yaml # Admin-only rollout helpers. Delete this branch before sharing. pages: - title: "Admin Ð Rollout" icon: "emoji:??" description: "Admin-only setup workspace. Complete these steps, verify Rollout Summary hits 100%, then delete this branch." hub: false children: - title: "Admin Ð Rollup Setup Guide" icon: "emoji:??" description: "Configure UI rollups in Notion (manual, fast). These unlock live totals in Estate Analytics and Hub summaries." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ ROLLUP_GUIDE_MARKER ¥ These steps are visible only to the admin. Delete the Admin Ð Rollout branch before sharing." - type: toggle summary: "Accounts ? Estate Analytics (Liquid Assets)" children: - type: paragraph text: > 1) Open ÒEstate AnalyticsÓ DB ? add a **Rollup** property named **UI: Liquid Assets**. 2) Relation: **Related Page** ? Pages Index ? filter to rows for **Account** pages. 3) Rollup property on target: **Balance** (or your chosen balance field). 4) Function: **Sum**. 5) Confirm the **Total Liquid Assets** formula prefers this UI rollup. - type: toggle summary: "Properties ? Estate Analytics (Real Property Value)" children: - type: paragraph text: > Add **UI: Real Property Value** rollup ? target **Estimated Value** from **Property** pages (via Pages Index). Function: **Sum**. - type: toggle summary: "Insurance ? Estate Analytics (Coverage)" children: - type: paragraph text: > Add **UI: Insurance Coverage** rollup ? target **Coverage Amount** from **Insurance** pages (via Pages Index). Function: **Sum**. - type: paragraph text: "When all three are done, remove this callout or type DONE here: [ADMIN ROLLUP DONE]" - title: "Admin Ð Views Setup Guide" icon: "emoji:???" description: "Create saved views so users see clean, focused lists by default." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ VIEWS_GUIDE_MARKER ¥ Create these **Saved Views** and set as default." - type: toggle summary: "Accounts Ð Active only" children: - type: paragraph text: > Open **Accounts** DB ? add a view named **Active** with filter **Archive Flag != Archive**. Set as **Default**. - type: toggle summary: "Transactions Ð By account" children: - type: paragraph text: > In **Transactions**, add a view **By Account** grouped by **Related Page**. Add a filter for a specific account for screenshots/demos. - type: toggle summary: "Properties Ð Active only" children: - type: paragraph text: > In **Properties**, add view **Active** with filter **Archive Flag != Archive**. - type: toggle summary: "Insurance Claims Ð Open/Submitted only" children: - type: paragraph text: > In **Insurance Claims**, add view **Open** with filter **Status is Open/Submitted/In Review**. - type: paragraph text: "When all saved views are created and defaults set, type DONE here: [ADMIN VIEWS DONE]" - title: "Admin Ð QA Checklist" icon: "emoji:?" description: "Final checks before deleting the Admin branch." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ QA_MARKER ¥ Confirm each item, then delete this Admin branch." - type: bulleted_list items: - "Rollout Summary shows 100%" - "UI rollups (Liquid/Property/Insurance) present in **Estate Analytics**" - "Active-only views set as default on major DBs" - "Hubs show progress snapshots and embedded views" - "Letters and Legal pages reviewed for tone and placeholders removed" acceptance: rows: - Title: "Set UI rollup: UI: Liquid Assets ? Accounts" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Set UI rollup: UI: Real Property Value ? Properties" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Set UI rollup: UI: Insurance Coverage ? Insurance" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Create Active-only views (Accounts/Properties)" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Create Open claims view (Insurance Claims)" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Verify Hubs show progress + embeds" Section: "Admin" Status: "Not Started" Role: "Owner" - Title: "Delete Admin Ð Rollout branch" Section: "Admin" Status: "Not Started" Role: "Owner" === END YAML: 09_admin_rollout_setup.yaml === === BEGIN YAML: 10_personalization_settings.yaml === # 10_personalization_settings.yaml # Personalization baseline without new script logic. # Adds an Admin Settings page and patches Acceptance DB with an "Estate Complexity" selector. pages: - title: "Admin Ð Settings" icon: "emoji:??" description: "Set foundational options before sharing the template. Delete Admin branch before handoff." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ SETTINGS_MARKER ¥ Choose Estate Complexity to guide which executor task packs you keep." - type: toggle summary: "Estate Complexity (choose one)" children: - type: bulleted_list items: - "Simple Ñ few accounts/assets, single property, straightforward will" - "Moderate Ñ multiple accounts/assets, property + insurance claims" - "Complex Ñ businesses, multiple properties, trusts, tax planning" - type: paragraph text: "After choosing, keep the matching executor task pack (see 'Executor Task Packs') and archive/delete the others." acceptance: rows: - Title: "Set Estate Complexity (Simple/Moderate/Complex)" Section: "Admin" Status: "Not Started" Role: "Owner" db: property_patches: "Setup & Acceptance": add_properties: "Estate Complexity": type: select options: [Simple, Moderate, Complex] === END YAML: 10_personalization_settings.yaml === === BEGIN YAML: 11_executor_task_profiles.yaml === # 11_executor_task_profiles.yaml # Provides three executor task packs as pages with checklists (copy/adapt; delete non-applicable). pages: - title: "Executor Task Packs" icon: "emoji:??" description: "Pick ONE pack based on Estate Complexity. Tasks are checklists you can copy into Executor Hub. Delete this page before sharing." children: - title: "Pack Ð Simple Estate" icon: "emoji:??" body: - type: to_do text: "Locate will and ID; store in Legal Documents" - type: to_do text: "Secure home, pets, vehicles" - type: to_do text: "Notify key accounts (bank, credit card, utilities)" - type: to_do text: "Open estate account (bank)" - type: to_do text: "Pay immediate expenses; track receipts" - title: "Pack Ð Moderate Estate" icon: "emoji:??" body: - type: to_do text: "All Simple tasks" - type: to_do text: "File insurance claims (Home/Auto/Life); track in Insurance Claims DB" - type: to_do text: "Inventory assets & liabilities; reconcile against Accounts DB" - type: to_do text: "Notify employer(s); handle benefits & last paycheck" - type: to_do text: "Prepare preliminary distribution plan" - title: "Pack Ð Complex Estate" icon: "emoji:??" body: - type: to_do text: "All Moderate tasks" - type: to_do text: "Coordinate with attorney/CPA; schedule standing check-ins" - type: to_do text: "Manage business interests; review operating agreements" - type: to_do text: "Real property: appraisals, maintenance logs, insurance" - type: to_do text: "Tax filings & deadlines calendar (estate, fiduciary income, property)" === END YAML: 11_executor_task_profiles.yaml === === BEGIN YAML: 12_letters_content_patch.yaml === # 12_letters_content_patch.yaml # Expands Letters with ready-to-adapt drafts and concise disclaimers. pages: - title: "Letter Ð Credit Card Company (Notification of Death)" icon: "emoji:??" Body: | Re: Account {{Last 4 digits}} Ñ Notification of Death To whom it may concern, I am writing to notify you of the death of {{Decedent Full Name}}, who held the above account. I am the appointed executor and request that the account be noted accordingly. Please provide the process for closing the account and the list of any required documents. Attached/Available on request: ¥ Copy of death certificate ¥ Proof of executor appointment Please direct future correspondence to: {{Executor Name}} {{Executor Address}} {{Executor Phone}} ¥ {{Executor Email}} Thank you for your assistance. Sincerely, {{Executor Name}} Disclaimer: "This is a general sample. Requirements vary by issuer. Confirm instructions before sending." - title: "Letter Ð Bank (Account Transition/Closure)" icon: "emoji:??" Body: | Re: {{Bank Name}} Ñ {{Account Type}} Ñ {{Last 4 digits}} Dear {{Bank Name}} Estate Services, I am notifying you of the death of {{Decedent Full Name}} and request guidance to transition or close the referenced account. I am the executor for the estate. Please provide required forms and next steps. Included/Available: ¥ Death certificate ¥ Executor appointment ¥ Government-issued ID Please confirm receipt and the expected timeline. Sincerely, {{Executor Name}} Ñ Executor Disclaimer: "General sample; verify bank-specific estate procedures." - title: "Letter Ð Utility Provider (Service Change/Closure)" icon: "emoji:??" Body: | Re: Service at {{Service Address}} Ñ Account {{Account Number}} Hello, IÕm writing to notify you of the death of {{Decedent Full Name}}. Please advise on closing or transferring this service and any final bill requirements. Contact for this account: {{Executor Name}} Ñ Executor {{Executor Phone}} ¥ {{Executor Email}} Thank you. Disclaimer: "Confirm utilityÕs policy; some allow transfer with minimal documentation." === END YAML: 12_letters_content_patch.yaml === === BEGIN YAML: 13_hub_ui_embeds.yaml === # 13_hub_ui_embeds.yaml # Adds guided embed instructions and progress snapshots to Hubs (idempotent via markers). pages: - title: "Preparation Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "HUB_MARKER::PREP ¥ Embed 'Setup & Acceptance Ð Active' view below for live progress. (Create the Saved View first in the DB.)" - title: "Executor Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "HUB_MARKER::EXEC ¥ Embed 'Executor Tasks Ð Active' and 'Insurance Claims Ð Open' views below." - title: "Family Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "HUB_MARKER::FAM ¥ Embed 'Letters Ð Outbox' view here for at-a-glance communication status." === END YAML: 13_hub_ui_embeds.yaml === === BEGIN YAML: 14_assets_standardization.yaml === # 14_assets_standardization.yaml # Admin assets checklist + guidance to keep visuals consistent. pages: - title: "Admin Ð Assets & Icons" icon: "emoji:???" description: "Standardize icons and covers for a cohesive look. Delete before sharing." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ ASSETS_MARKER ¥ Host icons/covers at ASSET_BASE_URL. Use consistent naming: hub_prep.svg, doc_legal.svg, db_accounts.svg." - type: bulleted_list items: - "Upload icons and covers to GitHub Pages (or your host)" - "Set ASSET_BASE_URL in .env" - "Run deploy (icons/covers auto-attach via YAML)" - "Scan pages for any missing assets and adjust naming" === END YAML: 14_assets_standardization.yaml === === BEGIN YAML: 15_mode_guidance.yaml === # 15_mode_guidance.yaml # Beginner/Advanced guidance pages per Hub (non-intrusive; easy to delete). pages: - title: "Preparation Hub Ð Beginner Tips" icon: "emoji:??" description: "Short steps, fewer details. Use this if you want to move gently and steadily." body: - type: bulleted_list items: - "Start with Setup & Acceptance Ñ one page at a time" - "Leave Rollups for later; manual numbers are fine" - "Use the Samples as a guide; keep it simple" - title: "Preparation Hub Ð Advanced Tools" icon: "emoji:??" description: "For power users comfortable with databases and views." body: - type: bulleted_list items: - "Add the UI rollups and tie them into Estate Analytics" - "Create filtered Saved Views for each major DB" - "Use progress formulas and archive filters to keep lists clean" === END YAML: 15_mode_guidance.yaml === === BEGIN YAML: 16_letters_database.yaml === # 16_letters_database.yaml # Converts Letters into a proper database with realistic seeds. # Also creates a parallel "Letters Ð Library (Pages)" branch so subpages # exist even before any automationsÑsatisfying both DB-first and page-first flows. db: schemas: "Letters": properties: Name: { type: title } Recipient Type: type: select options: [Bank, Credit Card, Utility, Insurer, Employer, Other] Purpose: type: select options: [Notification of Death, Close Account, Transfer Service, Benefits, Claim, Other] Recipient Name: { type: rich_text } Related Account/Page: type: relation # will be bound to Pages Index by deployer Body: { type: rich_text } Disclaimer: { type: rich_text } Status: type: select options: [Draft, Ready, Sent, Follow-up Needed] Last Sent: { type: date } seed_rows: "Letters": - Name: "Credit Card Ñ Notification of Death" Recipient Type: "Credit Card" Purpose: "Notification of Death" Recipient Name: "Premier Card Services" Related Page Title: "Account Ð Credit Card (Premier)" Body: | Re: Account {{Last 4 digits}} Ñ Notification of Death To whom it may concern, I am writing to notify you of the death of {{Decedent Full Name}}, who held the above account. I am the appointed executor and request that the account be noted accordingly. Please provide the process for closing the account and the list of any required documents. Attached/Available on request: ¥ Copy of death certificate ¥ Proof of executor appointment Please direct future correspondence to: {{Executor Name}} {{Executor Address}} {{Executor Phone}} ¥ {{Executor Email}} Thank you for your assistance. Sincerely, {{Executor Name}} Disclaimer: "This is a general sample. Requirements vary by issuer. Confirm instructions before sending." Status: "Draft" - Name: "Bank Ñ Account Transition/Closure" Recipient Type: "Bank" Purpose: "Close Account" Recipient Name: "Wayfinder Community Bank Ñ Estate Services" Related Page Title: "Account Ð Checking (Everyday)" Body: | Re: {{Bank Name}} Ñ {{Account Type}} Ñ {{Last 4 digits}} Dear {{Bank Name}} Estate Services, I am notifying you of the death of {{Decedent Full Name}} and request guidance to transition or close the referenced account. I am the executor for the estate. Please provide required forms and next steps. Included/Available: ¥ Death certificate ¥ Executor appointment ¥ Government-issued ID Please confirm receipt and the expected timeline. Sincerely, {{Executor Name}} Ñ Executor Disclaimer: "General sample; verify bank-specific estate procedures." Status: "Draft" - Name: "Utility Ñ Service Transfer/Closure" Recipient Type: "Utility" Purpose: "Transfer Service" Recipient Name: "City Water & Power" Related Page Title: "Property Ð Primary Residence (Maple St.)" Body: | Re: Service at {{Service Address}} Ñ Account {{Account Number}} Hello, IÕm writing to notify you of the death of {{Decedent Full Name}}. Please advise on closing or transferring this service and any final bill requirements. Contact for this account: {{Executor Name}} Ñ Executor {{Executor Phone}} ¥ {{Executor Email}} Thank you. Disclaimer: "Confirm utilityÕs policy; some allow transfer with minimal documentation." Status: "Draft" pages: - title: "Letters Ð Library (Pages)" icon: "emoji:??" description: "If you prefer working with pages, use these draft letters. The Letters database above holds the canonical versions." children: - title: "Letter Ð Credit Card Company (Notification of Death)" icon: "emoji:??" Body: | Re: Account {{Last 4 digits}} Ñ Notification of Death To whom it may concern, I am writing to notify you of the death of {{Decedent Full Name}}, who held the above account. I am the appointed executor and request that the account be noted accordingly. Please provide the process for closing the account and the list of any required documents. Attached/Available on request: ¥ Copy of death certificate ¥ Proof of executor appointment Please direct future correspondence to: {{Executor Name}} {{Executor Address}} {{Executor Phone}} ¥ {{Executor Email}} Thank you for your assistance. Sincerely, {{Executor Name}} Disclaimer: "This is a general sample. Requirements vary by issuer. Confirm instructions before sending." - title: "Letter Ð Bank (Account Transition/Closure)" icon: "emoji:??" Body: | Re: {{Bank Name}} Ñ {{Account Type}} Ñ {{Last 4 digits}} Dear {{Bank Name}} Estate Services, I am notifying you of the death of {{Decedent Full Name}} and request guidance to transition or close the referenced account. I am the executor for the estate. Please provide required forms and next steps. Included/Available: ¥ Death certificate ¥ Executor appointment ¥ Government-issued ID Please confirm receipt and the expected timeline. Sincerely, {{Executor Name}} Ñ Executor Disclaimer: "General sample; verify bank-specific estate procedures." - title: "Letter Ð Utility Provider (Service Change/Closure)" icon: "emoji:??" Body: | Re: Service at {{Service Address}} Ñ Account {{Account Number}} Hello, IÕm writing to notify you of the death of {{Decedent Full Name}}. Please advise on closing or transferring this service and any final bill requirements. Contact for this account: {{Executor Name}} Ñ Executor {{Executor Phone}} ¥ {{Executor Email}} Thank you. Disclaimer: "Confirm utilityÕs policy; some allow transfer with minimal documentation." === END YAML: 16_letters_database.yaml === === BEGIN YAML: 17_hub_copy_polish.yaml === # 17_hub_copy_polish.yaml # Refines hub copy to be empathetic and action-forward, and reminds the admin how to embed live views. pages: - title: "Preparation Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "This hub keeps you steady as you prepare. Start with the first page in Setup & Acceptance. Small steps are enough." - title: "Executor Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "This space helps you carry out wishes with clarity. Use the checklists and letters here; when in doubt, do the next right task." - title: "Family Hub" body: - type: callout icon: "emoji:??" color: gray_background text: "Care for yourself first. When youÕre ready, this hub gathers updates and shared notes in one place." === END YAML: 17_hub_copy_polish.yaml === === BEGIN YAML: 18_admin_helpers_expanded.yaml === # 18_admin_helpers_expanded.yaml # Adds richer helper content with screenshot/link placeholders. Uses ADMIN_HELP_URL env (set in .env). pages: - title: "Admin Ð Guided Helpers" icon: "emoji:??" description: "More detailed helpers for common manual steps. Delete before sharing." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ HELPERS_MARKER ¥ Replace the links below with your knowledge base or Loom." - type: toggle summary: "Create a Saved View (filter & sort)" children: - type: bulleted_list items: - "Open the database (e.g., Accounts)" - "Click **+ Add a view** ? Table/List/Board" - "Add filters (e.g., Archive Flag != Archive)" - "Set Sort by **Updated** desc" - "Click **Save as default**" - type: paragraph text: "Guide: ${ADMIN_HELP_URL}/saved-views" - type: paragraph text: "Screenshot: ${ADMIN_HELP_URL}/img/saved-view.png" - type: toggle summary: "Add a Rollup" children: - type: bulleted_list items: - "Open **Estate Analytics**" - "Add a property ? **Rollup** ? name it **UI: Liquid Assets**" - "Relation: **Related Page** ? Pages Index (filter to Account pages)" - "Property: **Balance** ? Function: **Sum**" - type: paragraph text: "Guide: ${ADMIN_HELP_URL}/rollups" - type: paragraph text: "Screenshot: ${ADMIN_HELP_URL}/img/rollup.png" - type: toggle summary: "Embed a Saved View in a Hub" children: - type: bulleted_list items: - "Create the Saved View first in the database" - "Copy link to the view" - "Paste in the Hub; choose **Create embed**" - type: paragraph text: "Guide: ${ADMIN_HELP_URL}/embeds" - type: paragraph text: "Screenshot: ${ADMIN_HELP_URL}/img/embed.png" === END YAML: 18_admin_helpers_expanded.yaml === === BEGIN YAML: 19_assets_standardize_patch.yaml === # 19_assets_standardize_patch.yaml # Enforces a single asset base and consistent naming; adds an Admin checklist. pages: - title: "Admin Ð Visual Assets" icon: "emoji:???" description: "Keep icons and covers consistent across the workspace. Delete before sharing." body: - type: callout icon: "emoji:??" color: gray_background text: "ADMIN_ONLY ¥ ASSET_BASE ¥ Set ASSET_BASE_URL in your .env (e.g., https://yourname.github.io/assets/notion). Avoid Unsplash fallbacks." - type: bulleted_list items: - "Use SVG or PNG; prefer SVG for icons" - "Use clear names: hub_prep.svg, hub_executor.svg, hub_family.svg" - "DB icons: db_accounts.svg, db_properties.svg, db_insurance.svg, db_letters.svg" - "Covers: cover_preparation.jpg, cover_executor.jpg, cover_family.jpg" - type: paragraph text: "After setting ASSET_BASE_URL, re-run deploy to attach icons/covers automatically." === END YAML: 19_assets_standardize_patch.yaml === === BEGIN YAML: 99_release_notes.yaml === release_notes: 'Legacy Concierge Ñ Full Release Notes v0.0: Initial concept & YAML skeleton (titles only). v0.1: Basic page creation script; dry-run/deploy; icons/covers minimal. v0.2: Subpages & disclaimers; executor/family distinction; first prompts. v0.3: Compassionate instructions; sample legal text (non-legal). v0.4: QR code strategy finalized (two packs: Family Essentials, Full Executor). v0.5: Letters & samples seeded; Letters DB established. v1.0: First complete deployable template (60+ pages). v3.5.4: One-way helpers; never reappear once removed. v3.5.5: Parent-aware deploy; respects manual nesting (overrides available). v3.5.6: Acceptance DB seeding from YAML; Letters Index de-dup. v3.5.7: Unified Setup & Acceptance DB; section subtotals & totals. v3.5.8: Collapsible helper toggles with step-by-step instructions. v3.5.9: Live DB-driven rollout; helper rows auto-Done; PageURL/Section sync; hub view helpers; extra diagnostics; preflight. v3.6.0: Content completion pass (samples, letters, seeds, time estimates, release notes page). v3.6.1: Gaps fixed (helper upsert/auto-Done restored; hub toggles; expanded pages & letters; copy registry; refined seeds/times; Admin release notes). v3.6.2: Final content polish Ñ page-specific compassionate helpers, unique Acceptance checks, letters with prompts/disclaimers, legal samples with prompts/disclaimers, tailored DB helper pages, Admin cockpit & diagnostics, emoji icons with optional hosted filenames. ' === END YAML: 99_release_notes.yaml === === BEGIN YAML: zz_acceptance_rows.yaml === acceptance: rows: - Page: Preparation Hub Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Top Level - Page: Executor Hub Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Top Level - Page: Family Hub Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Top Level - Page: Legal Documents Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Top Level - Page: Financial Accounts Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 30 Section: Top Level - Page: Property & Assets Role: owner Check: Add deed/mortgage info and point of contact. Status: Pending Est. Time (min): 30 Section: Top Level - Page: Insurance Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 30 Section: Top Level - Page: Subscriptions Role: owner Check: List services, login methods, next billing dates. Status: Pending Est. Time (min): 30 Section: Top Level - Page: Letters Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 45 Section: Top Level - Page: Memories & Keepsakes Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Top Level - Page: Contacts Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Top Level - Page: QR Codes Role: owner Check: Confirm each QR points to the intended page and permissions are correct. Status: Pending Est. Time (min): 25 Section: Top Level - Page: Living Will Ð Sample Document Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 75 Section: Legal Documents - Page: Power of Attorney Ð Sample Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 75 Section: Legal Documents - Page: Advance Directive Ð Sample Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 75 Section: Legal Documents - Page: Trust Ð Sample Outline Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 75 Section: Legal Documents - Page: Executor Checklist Role: owner Check: Review first-48-hours tasks and note whatÕs done. Status: Pending Est. Time (min): 25 Section: Executor Hub - Page: Bank & Account Access Notes Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 30 Section: Executor Hub - Page: Funeral & Memorial Preferences Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Executor Hub - Page: Messages for Family Role: owner Check: Write a short note in your own words and remove this prompt. Status: Pending Est. Time (min): 25 Section: Family Hub - Page: Keepsakes Index Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Family Hub - Page: Primary Bank Accounts Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 30 Section: Financial Accounts - Page: Credit Cards Role: owner Check: List issuer contacts, last four digits, and closure instructions. Status: Pending Est. Time (min): 30 Section: Financial Accounts - Page: Brokerage & Retirement Role: owner Check: Upload latest statements and confirm beneficiaries/transfers. Status: Pending Est. Time (min): 25 Section: Financial Accounts - Page: Real Estate Role: owner Check: Add deed/mortgage info and point of contact. Status: Pending Est. Time (min): 25 Section: Property & Assets - Page: Vehicles Role: owner Check: Add VIN, title location, insurer details. Status: Pending Est. Time (min): 25 Section: Property & Assets - Page: Digital Assets Role: owner Check: Document access paths and any recovery instructions. Status: Pending Est. Time (min): 50 Section: Property & Assets - Page: Life Insurance Role: owner Check: Upload policy, confirm beneficiary, note claim contact path. Status: Pending Est. Time (min): 30 Section: Insurance - Page: Homeowners/Renters Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Insurance - Page: Health Insurance Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 30 Section: Insurance - Page: Streaming Services Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Subscriptions - Page: Utilities Role: owner Check: List services, login methods, next billing dates. Status: Pending Est. Time (min): 25 Section: Subscriptions - Page: Online Services Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 25 Section: Subscriptions - Page: QR Ð Family Essentials Role: owner Check: Confirm each QR points to the intended page and permissions are correct. Status: Pending Est. Time (min): 10 Section: QR Codes - Page: QR Ð Full Access for Executor Role: owner Check: Confirm each QR points to the intended page and permissions are correct. Status: Pending Est. Time (min): 10 Section: QR Codes - Page: Letter Ñ Bank Notification Ð Deceased Account Holder Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Credit Card Closure Request Role: owner Check: List issuer contacts, last four digits, and closure instructions. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Utility Account Transfer/Closure Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Insurance Claim Notification Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Employer HR Notification Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Subscription Cancellation (General) Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 45 Section: Letters - Page: Letter Ñ Social Media Memorialization Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 45 Section: Letters - Page: 'DB Setup: Accounts' Role: owner Check: Add institution contacts, balances, and closure steps. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Property' Role: owner Check: Add deed/mortgage info and point of contact. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Insurance' Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Contacts' Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Subscriptions' Role: owner Check: List services, login methods, next billing dates. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Keepsakes' Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Database Setup - Page: 'DB Setup: Letters Index' Role: owner Check: Personalize details, attach relevant files, and remove helpers when finished. Status: Pending Est. Time (min): 20 Section: Database Setup === END YAML: zz_acceptance_rows.yaml === End of materials. Reminder: keep your assessment neutral, specific, and grounded in the sources above. Executive Summary ??The "Legacy Concierge v3.7.9 (Gold)" deployment system is a highly structured and robust tool for managing estate-related information in Notion. The system demonstrates a high degree of foresight in its design, incorporating features like idempotency, robust API error handling, and a clear, user-centric structure. Its core strengths lie in its comprehensive page and database provisioning, as well as a well-defined rollout process.The primary weakness is a mismatch between the code and YAML definitions, leading to a degree of fragility. Several features described in the YAML are not fully implemented or are handled in a brittle manner by the deploy.py script. The reliance on manual, post-deployment steps for key functionality (e.g., UI rollups and saved views) introduces significant human error risk. Overall, while the system is designed with advanced concepts, its reliance on a human operator to complete critical setup tasks lowers its overall reliability.Validation TableFeatureVerdictEvidenceSeverityRecommendationPage CreationCorrect ?create_page() and upsert_page() correctly use the Notion API /v1/pages endpoint to create pages with titles, icons, covers, and parents as defined in the YAML.LowNone. The implementation is correct and robust.Database CreationCorrect ?create_database() correctly creates a new Notion database with the defined schema properties.LowNone. The implementation is correct and robust.Database SeedingCorrect ?insert_db_rows() iterates through seed_rows in the YAML and creates new pages in the specified database. It correctly handles various property types (title, select, multi-select, number, rich text).LowNone. The implementation is correct.Asset Handling (Icons/Covers)Incorrect ?resolve_icon() and create_page() prioritize emoji icons (emoji: in YAML), but when icon_file or cover_file is specified, the code does not process these. url_join is present but unused for icons/covers. The create_page function only accepts icon and cover arguments, not icon_file or cover_file. YAML includes icon_file and cover_file fields that are ignored by the script.HighThe script needs to be modified to use icon_file and cover_file from the YAML and create Notion external icons.Relation Property ResolutionPartially Correct ??insert_db_rows() attempts to resolve Related Page Title to a Notion page ID using find_index_item_by_title(). If a match is found, it creates a relation. If not, it creates a fallback Intended Relation rich text property. This behavior is correct, but a core piece of the logic for find_index_item_by_title is missing from the provided code, making it an incomplete implementation.MediumImplement the missing upsert_pages_index_row() logic and ensure all pages are indexed before insert_db_rows() is called.Hub UI & Progress BarsAbsent ?The YAML files define hub_ui_embeds and admin_rollout_setup that rely on manual steps for creating views and rollups. The Python script does not contain any logic to automatically create embedded views or progress bars based on these instructions. The script inserts HUB_MARKER text, but a human is required to perform the actual embedding.HighThe script needs to implement functionality to create and embed linked database views and progress rollups.Synced BlocksPartially Correct ??create_synced_library() creates synced blocks from the YAML. add_synced_to_pages() attempts to add copies, but the has_marker() check for idempotency is faulty; it's a simple in txt.lower() search, which is brittle. The logic to create the synced block library is present, but the script provided does not seem to call add_synced_to_pages(), making the feature dormant.MediumCall add_synced_to_pages() after creating the library. Improve the idempotency check to be more robust, perhaps by using a unique, hidden property or a less ambiguous token.Error Handling & RetriesCorrect ?The req() function includes robust retry logic for common transient API errors (429, 500, 502, 503, 504) and handles network timeouts. expect_ok() provides clear, contextual error messages for non-200/201 responses.LowNone. This is a significant strength of the codebase.Export to SheetsMissing/Incomplete Features* Rollups and Analytics: The code does not implement the creation of Notion Rollup properties. The 08_ultra_premium_db_patch.yaml file defines complex formula properties that would be broken without the corresponding UI rollup properties. The update_rollout_summary() function attempts to build a summary table, but the UI rollups themselves must be created manually.* Automated View Creation: The system relies on manual intervention to create and save filtered database views (e.g., "Active-only" views). The 13_hub_ui_embeds.yaml and 09_admin_rollout_setup.yaml files provide instructions for the user, not a command for the script to execute. This is a critical gap.* YAML-to-Script Consistency: The YAML files contain fields like slug, icon_file, and cover_file that the deploy.py script does not use. This indicates a mismatch between the configuration and the implementation.* Letters as Pages: While 16_letters_database.yaml defines a database of letters, the 03_letters.yaml file defines letters as a top-level list, and the YAML pages sections also contain pages for letters with Body and Disclaimer fields. The script's logic for inserting Body and Disclaimer into pages is not fully present. The code section add_letter_legal_content is defined but does not appear to be called within the main deployment flow.Fragility & Edge Cases* Idempotency Markers: The has_marker() and has_block_marker_recursive() functions rely on simple string searching (token in txt.lower()). This is fragile. A user could accidentally edit or delete the marker text, causing the script to re-insert blocks and break the intended layout.* Search Fallback: The find_page_id_by_title() function includes a search fallback that can be toggled by ENABLE_SEARCH_FALLBACK. However, the main deployment loop relies on a pre-populated state["pages"] dictionary. The search fallback logic is not integrated into the main page creation loop, limiting its usefulness.* Parent-Child Relationships: The add_nav_links() function relies on a simple parent-child relationship defined in the YAML. It creates a Back to [Parent] link but fails to create a link to a next sibling page because the add_nav_links() function is never called in the main deployment flow.* Missing Logic: The create_synced_library() function is defined, but no part of the main deploy.py script provided calls it. This leaves the synced blocks feature dormant. Similarly, upsert_pages_index_row() is defined but not called, breaking the Page Index DB functionality. The add_nav_links(), add_mobile_tip(), and add_letter_legal_content() are also defined but never called.Final VerdictDeployment Risk = High ??The "Legacy Concierge v3.7.9 (Gold)" system presents a high deployment risk. While the core API interaction layer is robust and the YAML configuration is well-defined, there's a significant disconnect between the two. The script fails to implement several critical features that are explicitly described in the YAML, such as automatic asset attachment, view creation, and rollup generation. Instead, it places the burden on the user to manually complete these steps post-deployment. The presence of functions that are never called, coupled with the reliance on fragile string-based markers for idempotency, demonstrates a lack of integration and a potential for user-induced errors. The system, as-is, is a semi-automated deployment tool, not a fully autonomous one. A user deploying this system would need to follow extensive manual setup instructions, increasing the likelihood of a failed or incomplete deployment.Google Privacy Policy Opens in a new window Google Terms of Service Opens in a new window Your privacy & Gemini Apps Opens in a new window Gemini may display inaccurate info, including about people, so double-check its responses.Continue this chat Google AccountJ C Hjonathan.hollander@gmail.com